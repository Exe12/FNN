import random
import sys
import numpy as np

board=[i for i in range(0,9)]
player, computer = 'X','O'

# Corners, Center and Others, respectively
moves=((1,7,3,9),(5,),(2,4,6,8))
# Winner combinations
winners=((0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6))
# Table
tab=range(1,10)

def print_board(board):
    x=1
    for i in board:
        end = ' | '
        if x%3 == 0:
            end = ' \n'
            if i != 1: end+='---------\n';
        char=' '
        if i in ('X','O'): char=i;
        x+=1
        print(char,end=end)
        

def can_move(brd, player, move):
    if move in tab and brd[move-1] == move-1:
        return True
    return False

def can_win(brd, player, move):
    places=[]
    x=0
    for i in brd:
        if i == player: places.append(x);
        x+=1
    win=True
    for tup in winners:
        win=True
        for ix in tup:
            if brd[ix] != player:
                win=False
                break
        if win == True:
            break
    return win

def make_move(brd, player, move, undo=False):
    if can_move(brd, player, move):
        brd[move-1] = player
        win=can_win(brd, player, move)
        if undo:
            brd[move-1] = move-1
        return (True, win)
    return (False, False)

# AI goes here
def computer_move(zustand):
    move=-1
    # If I can win, others don't matter.
    for i in range(1,10):
        if make_move(zustand, computer, i, True)[1]:
            move=i
            break
    if move == -1:
        # If player can win, block him.
        for i in range(1,10):
            if make_move(zustand, player, i, True)[1]:
                move=i
                break
    if move == -1:
        # Otherwise, try to take one of desired places.
        for tup in moves:
            for mv in tup:
                if move == -1 and can_move(zustand, computer, mv):
                    move=mv
                    break
    return move

# player = X
# computer = O

def trainingsdaten(anzahl):
    daten = []
    erwartet = []
    for i in range(anzahl):
        zustand = [0,1,2,3,4,5,6,7,8]
        for k in range(np.random.randint(0,9)):
            zustand[k] = np.random.choice(["X","O"])
        daten.append(zustand)
        erwartet.append([computer_move(zustand)])
    
    for i in range(len(daten)):
        for k in range(len(daten[1])):
            if daten[i][k] in [0,1,2,3,4,5,6,7,8]:
                daten[i][k] = 1
            if daten[i][k] == "X":
                daten[i][k] = 2
            if daten[i][k] == "O":
                daten[i][k] = 3
    return (daten,erwartet)

daten, erwartet = trainingsdaten(100)    # HIER DIE ANZAHL AN GEWÃœNSCHTEN DATEN ANGEBEN        
print("Daten:", daten)
print("")
print("Erwartet:", erwartet)
